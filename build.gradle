buildscript{
  repositories{
    maven{
      url "${mvnMirrorUrl}/content/groups/public"
      credentials {
        username = mvnMirrorUsername
        password = mvnMirrorPassword
      }
    }
    jcenter()
    mavenCentral()
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'net.epsilony.utils'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

eclipse {
    classpath {
        downloadJavadoc = true
    }
}

repositories{
  maven{
    url "${mvnMirrorUrl}/content/repositories/snapshots"
    credentials {
      username = mvnMirrorUsername
      password = mvnMirrorPassword
    }
  }
  maven{
    url "${mvnMirrorUrl}/content/groups/public"
    credentials {
      username = mvnMirrorUsername
      password = mvnMirrorPassword
    }
  }
  jcenter()
  mavenCentral()
}

dependencies {
  compile 'io.netty:netty-all:4.0.30.Final'
  compile 'net.sf.trove4j:trove4j:3.0.3'
  compile 'com.google.guava:guava:18.0'
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-all:1.+'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${mvnMirrorUrl}/content/repositories/releases") {
                authentication(userName: mvnMirrorUploadUsername, password: mvnMirrorUploadPassword)
            }
            snapshotRepository(url: "${mvnMirrorUrl}/content/repositories/snapshots") {
                authentication(userName: mvnMirrorUploadUsername, password: mvnMirrorUploadPassword)
            }
        }
    }
}

task wrapper( type: Wrapper, description: "create a gradlew" ) {
  gradleVersion = '2.6'
}
